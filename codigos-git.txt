-----------------------------------------Utilizado para diretórios.-------------------------------------------------------
pwd -> Utilizado para mostrar o caminho do diretório atual.
cd .. -> Retorna um diretorio.
cd [nomeDaPasta] -> Responsável por entrar dentro da pasta mencionada.
mkdir [nomeDoArquivo] -> Utilizado para criar um diretório com o nome mencionado.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/
-----------------------------------------Limpa tela-----------------------------------------------------------------------
control + L -> Limpa a tela do terminal.
clear -> Também é responsável por limpar a tela do terminal.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Configurações iniciais e globais.------------------------------------------------
git config --global user.name [seuNome] -> Utilizado para criar uma configuração global de seu nome de usuário.
git config --global user.email [seuEmail] -> Utilizado para criar uma configuração global de seu endereço de e-mail.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Git add--------------------------------------------------------------------------
git add . -> Utilizado para adicionar todos arquivos presentes no working directory á staging area.
git add [nomeDoArquivo] -> Utilizado para adicionar o arquivo mencionado á staging area.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Git revert e reset---------------------------------------------------------------
git revert head -> Reverte o ultimo commit.
git revert [hash] -> Reverte o commit do arquivo mencionado.
git revert --abort -> Cancela uma operação git revert com erros.
git reset [hash] -> Move os ponteiros do branch atual para o estado especificado. 
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Git log--------------------------------------------------------------------------
git log -> Utilizado para mostrar as informações dos commits realizados e suas informações.
git log --oneline -> Utilizado para mostrar os commits realizados de uma forma mais enxuta e linha por linha.
git log [nomeDoArquivo] -> Utilizado para retornar as informações sobre os commits realizados no arquivo mencionado.
git log --dif -filter=D --summary -> Trás as informações dos arquivos excluídos.
git log --oneline -> Mostra todos commits linha por linha.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Git diff-------------------------------------------------------------------------
git diff [nomeDoArquivo] -> mostra as diferenças realizadas num arquivo modificado na working directory. 
git diff --staged [nomeDoArquivo] -> Mostra as diferenças num arquivo modificado na staging area.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Git rm / rm----------------------------------------------------------------------
git rm [nomeDoArquivo] -> Remove o arquivo mencionado.
git rm --cached [nomeDoArquivo] -> Tira o arquivo selecionado da staging area.
rm -rf [nomeDoDiretorio] -> Utilizado para excluir todo um diretório.
git init -> Utilizado para criar o repositório git dentro do diretório atual.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Git Commit-----------------------------------------------------------------------
git commit -> Utilizado para efetuar commit sem passar uma mensagem inicialmente.
git commit -m "mensagemDeCommit" -> Utilizado para efetuar o commit passando mensagem.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/

-----------------------------------------Restante-------------------------------------------------------------------------
git status -> Utilizado para verificar o estado no qual o git se encontra e se possui arquivos a ser commitado.
git help -> Utilizado para demonstrar uma lista de comandos com suas respectivas descrições.
git show [hash] -> Utilizado para mostrar as alterações feitas no commit especificado.
git checkout [hash] [nomeDoArquivo] -> Restaura o arquivo mencionado (caso tenha sido excluído)
touch [nomeDoArquivo].[extensão] -> Utilizado para criar um arquivo com o nome e a extensão mencionada no código de criação.
mv [nomeAntigo] [nomeNovo] -> Utilizado para renomear arquivos.
cat [nomeDoArquivo] -> Mostra o conteúdo do arquivo mencionado.
echo [nomeDoArquivo] >> .gitignore
exit -> Fecha o terminal.
/=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/=/=//=/





